name: CI

on:
  push:  # only run on push to main
    branches: [main]
  pull_request:  # open between any two branches

jobs:
  test:
    name: "Test: Python ${{ matrix.python }} on ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        python:
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install .
          pip install -r tests/requirements_test.txt
      - name: Install Cleanlab Studio client
        run: pip install -e .
      - name: Set env variables (Linux/macOS/Windows)
        run: |
          echo "CLEANLAB_API_BASE_URL=${{ secrets.CLEANLAB_API_BASE_URL }}" >> $GITHUB_ENV
        shell: bash
      - name: Cleanlab login
        run:  cleanlab login --key "${{ secrets.CLEANLAB_STUDIO_CI_API_KEY }}"
      - name: Run tests
        run: |
          pytest --verbose
  typecheck:
    name: Type check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - run: |
          python -m pip install --upgrade pip
          pip install . # install deps
          pip install mypy
          mypy --install-types --non-interactive cleanlab_studio
      - run: mypy --strict cleanlab_studio
  post-start-comment:
    name: Post start comment
    runs-on: ubuntu-latest
    steps:
      - name: Post start comment
        run: |
          RUN_URL="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          COMMENT_BODY="Starting TLM tests. If you want to run the TLM tests again (in case they failed or you have further updates to the TLM code), comment '/test-tlm' on this PR.\n"
          COMMENT_BODY+="- [View full GitHub Actions run log]($RUN_URL)\n"
          curl -s -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d "{\"body\": \"$COMMENT_BODY\"}" \
            "${{ github.event.pull_request.comments_url }}"
  post-done-comment:
    name: Post done comment
    runs-on: ubuntu-latest
    needs:
      - test
      - typecheck
    steps:
      - name: Post done comment
        run: |
          RUN_URL="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          COMMENT_BODY="TLM Tests completed. Results: ${{ needs.test.result }}.\nTLM Property tests completed. Results: ${{ needs.typecheck.result }}\n Comment '/test-tlm' on this PR if you want to run the tests again."
          COMMENT_BODY+="- [View full GitHub Actions run log]($RUN_URL)\n"
          curl -s -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d "{\"body\": \"$COMMENT_BODY\"}" \
            "${{ github.event.pull_request.comments_url }}"
  comment-on-pr:
    name: Launch TLM tests on PR
    runs-on: ubuntu-latest
    steps:
      - name: Comment on PR
        uses: actions/github-script@v6
        with:
          script: |
            const commentBody = "/test-tlm";  // The comment you want to post
            const issueNumber = context.issue.number;  // Get the PR number

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber,
              body: commentBody
            });
