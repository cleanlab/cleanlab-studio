name: CI TLM

on:
  issue_comment:
    types: [created, edited]

jobs:
  test:
    name: "Test: Python ${{ matrix.python }} on ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}
    if: github.event.comment.body == '/test-tlm'  # only run the test if /test-tlm is commented on the PR
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        python:
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install .
          pip install -r tests/requirements_test.txt
      - name: Install Cleanlab Studio client
        run: pip install -e .
      - name: Set env variables (Linux/macOS/Windows)
        run: |
          echo "CLEANLAB_API_BASE_URL=${{ secrets.CLEANLAB_API_BASE_URL }}" >> $GITHUB_ENV
        shell: bash
      - name: Cleanlab login
        run:  cleanlab login --key "${{ secrets.CLEANLAB_STUDIO_CI_API_KEY }}"
      - name: Run tests
        run: |
          pytest tests/tlm/ --ignore=tests/tlm/test_properties.py --verbose
  propertytest:
    name: "Property Test TLM: Python ${{ matrix.python }} on ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}
    if: github.event.comment.body == '/test-tlm'  # only run the test if /test-tlm is commented on the PR
    strategy:
      matrix:
        os:
          - macos-latest
        python:
          - "3.11"
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install .
          pip install -r tests/requirements_test.txt
      - name: Install Cleanlab Studio client
        run: pip install -e .
      - name: Set env variables (Linux/macOS/Windows)
        run: |
          echo "CLEANLAB_API_BASE_URL=${{ secrets.CLEANLAB_API_BASE_URL }}" >> $GITHUB_ENV
        shell: bash
      - name: Cleanlab login
        run:  cleanlab login --key "${{ secrets.CLEANLAB_STUDIO_CI_API_KEY }}"
      - name: Run tests
        run: |
          TEST_RESULT=$(pytest -n auto tests/tlm/test_properties.py --verbose --maxfail=1 --disable-warnings || echo "FAILED")
          if [[ "$TEST_RESULT" == "FAILED" ]]; then
            echo "property_test_result=FAIL" >> $GITHUB_ENV
          else
            echo "property_test_result=PASS" >> $GITHUB_ENV
          fi
      - name: Post comment with dynamic results
        run: |
          curl -s -X POST \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Content-Type: application/json" \
          -d "{\"body\": \"TLM Property Tests completed.\nResults: ${{ env.property_test_result }}\"}" \
          "${{ github.event.issue.comments_url }}"
  post-start-comment:
    steps:
      - name: Post start comment
        run: |
          RUN_URL="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          COMMENT_BODY="Starting TLM tests..."
          COMMENT_BODY+="- [View full GitHub Actions run log]($RUN_URL)\n"
          curl -s -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d "{\"body\": \"$COMMENT_BODY\"}" \
            "${{ github.event.pull_request.comments_url }}"
  post-done-comment:
    needs:
      - test
      - propertytest
    steps:
      - name: Post done comment
        run: |
          RUN_URL="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          COMMENT_BODY="TLM Tests completed. Results: ${{ needs.test.result }}.\nTLM Property tests completed. Results: ${{ needs.propertytest.result }}\n"
          COMMENT_BODY+="- [View full GitHub Actions run log]($RUN_URL)\n"
          curl -s -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d "{\"body\": \"$COMMENT_BODY\"}" \
            "${{ github.event.pull_request.comments_url }}"
