name: CI TLM

on:
  issue_comment:
    types: [created, edited]

jobs:
  test:
    name: "Test: Python ${{ matrix.python }} on ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}
    if: github.event.comment.body == '/test-tlm'  # only run the test if /test-tlm is commented on the PR
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        python:
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install .
          pip install -r tests/requirements_test.txt
      - name: Install Cleanlab Studio client
        run: pip install -e .
      - name: Set env variables (Linux/macOS/Windows)
        run: |
          echo "CLEANLAB_API_BASE_URL=${{ secrets.CLEANLAB_API_BASE_URL }}" >> $GITHUB_ENV
        shell: bash
      - name: Cleanlab login
        run:  cleanlab login --key "${{ secrets.CLEANLAB_STUDIO_CI_API_KEY }}"
      - name: Run tests
        run: |
          pytest tests/tlm/ --ignore=tests/tlm/test_properties.py --verbose
  propertytest:
    name: "Property Test TLM: Python ${{ matrix.python }} on ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}
    if: github.event.comment.body == '/test-tlm'  # only run the test if /test-tlm is commented on the PR
    strategy:
      matrix:
        os:
          - macos-latest
        python:
          - "3.11"
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install .
          pip install -r tests/requirements_test.txt
      - name: Install Cleanlab Studio client
        run: pip install -e .
      - name: Set env variables (Linux/macOS/Windows)
        run: |
          echo "CLEANLAB_API_BASE_URL=${{ secrets.CLEANLAB_API_BASE_URL }}" >> $GITHUB_ENV
        shell: bash
      - name: Cleanlab login
        run:  cleanlab login --key "${{ secrets.CLEANLAB_STUDIO_CI_API_KEY }}"
      - name: Run tests
        run: |
          pytest -n auto tests/tlm/test_properties.py --verbose
  launch-tlm-test-notif:
    name: Comment TLM test start on PR
    runs-on: ubuntu-latest
    steps:
      - name: Find Comment
        id: fc
        uses: peter-evans/find-comment@v3
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body-regex: '^/test-tlm$'
      - name: Create comment
        uses: peter-evans/create-or-update-comment@v4
        if: steps.fc.outputs.comment-id == ''
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            :sparkles: **Starting TLM tests...** :sparkles:
            If you want to run the TLM tests again (in case they failed or you have further updates to the TLM code), comment '/test-tlm' on this PR.
            [View full GitHub Actions run log](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
          reactions: rocket
      - name: Update comment
        uses: peter-evans/create-or-update-comment@v4
        if: steps.fc.outputs.comment-id != ''
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          body: |
            :sparkles: **Starting TLM tests...** :sparkles:
            If you want to run the TLM tests again (in case they failed or you have further updates to the TLM code), comment '/test-tlm' on this PR.
            [View full GitHub Actions run log](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
          reactions: rocket
  finish-tlm-test-notif:
    name: Comment TLM test completion on PR
    runs-on: ubuntu-latest
    needs:
      - launch-tlm-test-notif
      - test
      - propertytest
    steps:
      - name: Find Comment
        id: fc
        uses: peter-evans/find-comment@v3
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body-includes: Starting TLM tests
      - name: Update comment
        if: steps.fc.outputs.comment-id != ''
        uses: peter-evans/create-or-update-comment@v4
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          body: |
            :sparkles: **Tests completed!** :sparkles:
            TLM Tests Results: ${{ needs.test.result }}.
            TLM Property Tests Results: ${{ needs.propertytest.result }}.
            Click the Github Actions run log for more information.
